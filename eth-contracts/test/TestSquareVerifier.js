// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const SquareVerifier = artifacts.require('verifier');
const { proof, inputs } = require('../../zokrates/code/square/proof');

contract('TestVerifier', accounts => {
    describe('Verifier tests', function(){
        beforeEach(async function(){
            this.contract = await SquareVerifier.new();
        });

        // Test verification with correct proof
        // - use the contents from proof.json generated from zokrates steps

        it("contract should verify with correct proofs", async function() {
            let verify = await this.contract.verifyTx.call(proof.a, proof.b, proof.c, inputs)
            assert.equal(verify,true,"ERROR: did not verify when it should have");
        })

    
        // Test verification with incorrect proof

        it("contract should NOT verify with incorrect proofs", async function() {
            let badInputs=[
                "0x1234567891234567891234567891234567891234567891234567891234567890",
                "0x9876543210987654321098765432109876543210987654321098765432109876"
            ]
            let verify = await this.contract.verifyTx.call(proof.a, proof.b, proof.c, badInputs)
            assert.equal(verify,false,"ERROR: verified when it should not have");
        })
    })
})

